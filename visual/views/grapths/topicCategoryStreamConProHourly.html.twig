<style>
    .line {
        fill: none;
        stroke: #000;
        stroke-width: 2px;
    }
</style>
<div id="cph_dataPlaceholder" class="cph_chart"> Data loading, please wait ... </div>
<script type="text/javascript">
    $(document).ready(function () {
      var dataUrl = "{{dataUrl}}";
      queue()
        .defer(d3.json, dataUrl)
        .defer(d3.json, "/data/categoryColors")
        .await(function (error, data, categoryColors) {
          if (error) {
            $('#cph_dataPlaceholder').html("error: " + error);
            return;
          }

          $('#cph_dataPlaceholder').html("");
          $('#cph_dataPlaceholder').height(250);
          streamChart.initialise(data, categoryColors, '#cph_dataPlaceholder');
        });
    });
    var streamChart = {
      initialise: function (data, categoryColors, chartDivSelector) {
        var parent = this;
        parent._setWidth(chartDivSelector);
        parent.draw(data, categoryColors, chartDivSelector);
        $(window).resize(function () {
          parent._setWidth(chartDivSelector);
          d3.select(chartDivSelector)
            .selectAll("div")
            .remove();
          $(chartDivSelector).empty();
          parent.draw(data, categoryColors, chartDivSelector);
        });
      },
      _setWidth: function (chartDivSelector) {
        $(chartDivSelector).width($(chartDivSelector).parent().width() - 10);
      },
      draw: function (data, categoryColors, chartDivSelector) {
        // Used the following chart as a base: http://bl.ocks.org/mbostock/1256572
        // http://bl.ocks.org/mbostock/4060954
        var hours = commonCharts.make2DigitNumberArray(0, 23);
        var days = d3.map(data, function (d) {
          return commonCharts.getDateValue(d.Date);
        }).keys();
        var margin = {top: 20, right: 20, bottom: 30, left: 20};
        var width = $(chartDivSelector).width() - margin.left - margin.right;
        var divHeight = (150 * categoryColors.length) + margin.top + margin.bottom;
        $(chartDivSelector).height(divHeight);
        var height = $(chartDivSelector).height() - margin.top - margin.bottom;

        var stack = d3.layout.stack().offset("wiggle");
        var dataStack = stack(d3.range(categoryColors.length).map(function (colorIndex) {
          var stackArray = [];
          $.each(data, function (index, item) {
            var categoryIndex = 0;
            for (var i = 0; i < item.Data.length; i++) {
              if (categoryColors[colorIndex].Category == item.Data[i].Category) {
                categoryIndex = i;
                break;
              }
            }

            var element = {
              x: commonCharts.getHourValue(item.Date),
              y: item.Data[categoryIndex].ProCount,
              //y0: item.Data[categoryIndex].ConCount,
              categoryIndex: categoryIndex,
              colorIndex: colorIndex,
              item: item.Data[categoryIndex]
            };
            stackArray.push(element);
          });
          return stackArray;
        }));
        debugger;
        // Hours -> Width
        var x = d3.scale.linear()
          .domain([0, hours.length - 1])
          .range([0, width]);

        // y scale max total cound
        var y = d3.scale.linear()
          .domain([0, d3.max(dataStack, function (stackItem) {
              return d3.max(stackItem, function (item) {
                return item.y + item.y0;
              });
            })])
          .range([height, 0]);

        var area = d3.svg.area()
          .x(function (d) {
            return x(d.x);
          })
          .y0(function (d) {
            return y(d.y0);
          })
          .y1(function (d) {
            return y(d.y0 + d.y);
          });

        var svg = d3.select(chartDivSelector).append("svg")
          .attr("width", width)
          .attr("height", height);


        svg.selectAll("path")
          .data(dataStack)
          .enter().append("path")
          .attr("d", area)
          .style("fill", function (d) {
            debugger;
            return categoryColors[d[0].colorIndex].Color;
          });
      }
    };
</script>