<!--Raster & Vector IV
https://bl.ocks.org/mbostock/9535021
-->

<!DOCTYPE html>
<meta charset="utf-8">
<style>

    .map_chart {
        margin: 0;
    }

    //path {
    //    fill: none;
    //    stroke: red;
    //    stroke-linejoin: round;
    //    stroke-width: 1.5px;
    //}

</style>
<div id="map_dataPlaceholder" class="map_chart"> Data loading, please wait ... </div>
<!--<script src="d3.v3.min.js"></script>-->
<script src="/js/d3.min.js" type="text/javascript"></script>
<script src="/js/topojson.v1.min.js"></script>
<script src="/js/d3.geo.tile.min.js"></script>
<script>
    
    $("#map_dataPlaceholder").html('');
    var width = $("#map_dataPlaceholder").width() - 10,
      height = Math.max(500, $("#map_dataPlaceholder").height());
    $("#map_dataPlaceholder").height(height);
    
    var tile = d3.geo.tile()
      .size([width, height]);

    var projection = d3.geo.mercator()
      .scale((1 << 12) / 2 / Math.PI)
      .translate([width / 2, height / 2]);

    var center = projection([-100, 40]);

    var path = d3.geo.path()
      .projection(projection);

    var zoom = d3.behavior.zoom()
      .scale(projection.scale() * 2 * Math.PI)
      .scaleExtent([1 << 11, 1 << 14])
      .translate([width - center[0], height - center[1]])
      .on("zoom", zoomed);

    var svg = d3.select("#map_dataPlaceholder").append("svg")
      .attr("width", width)
      .attr("height", height);

    var raster = svg.append("g");

    var vector = svg.append("path");

    d3.csv("/staticData/us-state-capitals.csv", type, function (error, capitals) {
      if (error)
            throw error;
      svg.call(zoom);
      vector.datum({type: "FeatureCollection", features: capitals});
      zoomed();
    });

    function type(d) {
      return {
        type: "Feature",
        properties: {
          name: d.description,
          state: d.name
        },
        geometry: {
          type: "Point",
          coordinates: [+d.longitude, +d.latitude]
        }
      };
    }

    function zoomed() {
      var tiles = tile
        .scale(zoom.scale())
        .translate(zoom.translate())
        ();

      projection
        .scale(zoom.scale() / 2 / Math.PI)
        .translate(zoom.translate());

      vector
        .attr("d", path);

      var image = raster
        .attr("transform", "scale(" + tiles.scale + ")translate(" + tiles.translate + ")")
        .selectAll("image")
        .data(tiles, function (d) {
              return d;
          });

      image.exit()
        .remove();

      image.enter().append("image")
        .attr("xlink:href", function (d) {
              return "http://" + ["a", "b", "c"][Math.random() * 3 | 0] + ".tile.openstreetmap.org/" + d[2] + "/" + d[0] + "/" + d[1] + ".png";
          })
        .attr("width", 1)
        .attr("height", 1)
        .attr("x", function (d) {
              return d[0];
          })
        .attr("y", function (d) {
              return d[1];
          });
    }

</script>